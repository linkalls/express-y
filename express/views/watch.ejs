<div class="container mx-auto mt-8 p-4 bg-white shadow-lg rounded-lg">
  <h1 class="text-3xl font-bold mb-4"><%= title %></h1>
  <div class="flex flex-col lg:flex-row">
    <div class="lg:w-3/4">
      <div class="video-wrapper mb-8">
        <video id="my-video" class="video-js vjs-default-skin w-full h-full"  autoplay controls preload="auto">
          <source src="https://www.youtube.com/watch?v=<%= videoId %>" type="video/youtube" />
        </video>
      </div>
      <div class="mb-8">
        <h2 class="text-2xl font-semibold mb-2">Description</h2>
        <div id="description" class="text-gray-700 overflow-hidden max-h-24">
          <%- description %>
        </div>
        <button id="toggleDescription" class="mt-2 text-blue-500">もっと見る</button>
      </div>
    </div>
    <div class="lg:w-1/4">
      <div class="recommendations">
        <h2 class="text-2xl font-semibold mb-4">Recommendations</h2>
        <ul class="space-y-4">
          <% recommendations.forEach(recommendation => { %>
          <li class="bg-gray-100 p-4 rounded-lg shadow-md">
            <a href="/watch?v=<%= recommendation.videoId %>" class="block">
              <img src="http://<%=serverIp %>:8080<%= recommendation.videoThumbnails[0].url %>" alt="<%= recommendation.title %>" class="w-full h-32 object-cover rounded-md mb-2" />
              <span class="text-lg font-semibold text-gray-900"><%= recommendation.title %></span>
            </a>
          </li>
          <% }); %>
        </ul>
      </div>
    </div>
  </div>
</div>

<!-- ポップアップのHTML -->
<div id="redirect-popup" class="hidden fixed inset-0 bg-gray-800 bg-opacity-75 flex items-center justify-center z-50">
  <div class="bg-white p-6 rounded-lg shadow-lg text-center">
    <h2 class="text-2xl font-bold mb-4">リダイレクトの確認</h2>
    <p class="mb-4">このビデオは他のウェブサイトで再生できません。<br>リダイレクトしてもよろしいですか？</p>
    <button id="confirmRedirect" class="bg-blue-500 text-white px-4 py-2 rounded mr-2">はい</button>
    <button id="cancelRedirect" class="bg-gray-500 text-white px-4 py-2 rounded">いいえ</button>
  </div>
</div>

<style>
  .container {
    max-width: 1200px;
  }
  .video-wrapper {
    position: relative;
    padding-bottom: 56.25%; /* 16:9 aspect ratio */
    height: 0;
    overflow: hidden;
  }
  .video-js {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
  }
  #redirect-popup.hidden {
    display: none;
  }
</style>

<script>
var player = videojs("my-video", {
  techOrder: ["youtube"],
  plugins: {
    videoJsResolutionSwitcher: {
      default: "high",
      dynamicLabel: true,
    },
    httpSourceSelector: {},
    qualityLevels: {},
    markers: {
      markers: [
        { time: 9.5, text: "Marker 1" },
        { time: 16, text: "Marker 2" },
      ],
    },
    mobileUi: {},
    vr: {},
  },
});

// ビデオプレーヤーの音声を有効にする
player.muted(false);

// エラーハンドリング
player.on('error', function() {
  const error = player.error();
  if (error && error.code === 1150) {
    document.getElementById('redirect-popup').classList.remove('hidden');
  }
});

// ポップアップのボタンイベント
document.getElementById('confirmRedirect').addEventListener('click', function() {
  window.location.href = `http://<%= serverIp %>:8080/watch?v=<%= videoId %>`;
});

document.getElementById('cancelRedirect').addEventListener('click', function() {
  document.getElementById('redirect-popup').classList.add('hidden');
});

// Description toggle functionality
const description = document.getElementById("description");
const toggleDescription = document.getElementById("toggleDescription");

if (toggleDescription) {
  toggleDescription.addEventListener("click", () => {
    if (description.classList.contains("max-h-24")) {
      description.classList.remove("max-h-24");
      toggleDescription.textContent = "減らす";
    } else {
      description.classList.add("max-h-24");
      toggleDescription.textContent = "もっとみる";
    }
  });
}

// Mute toggle functionality
const toggleMute = document.getElementById("toggleMute");
let isMuted = false;

if (toggleMute) {
  toggleMute.addEventListener("click", () => {
    isMuted = !isMuted;
    player.muted(isMuted);
    toggleMute.textContent = isMuted ? '音声オン' : '音声オフ';
  });
}

document.querySelectorAll('a').forEach(link => {
  link.addEventListener('click', function() {
    showLoading();
  });
});
</script>